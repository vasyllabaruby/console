version: 3.1.0
jobs:
  test:
    parallelism: 12
    # Call bash as interactive login shell to make sure nvm is loaded through .bashrc
    shell: /bin/bash -ileo pipefail
    resource_class: small
    docker:
      - image: cimg/ruby:3.1.0-browsers
        environment:
          CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
          MOCHA_FILE: /tmp/circleci-test-results/mocha.xml
          RACK_ENV: test
          BUNDLE_PATH: vendor/bundle
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          RUBYOPT: "-W0"
    steps:
      - checkout
      - run:
          name: bundle install
          command: bundle install
      - run:
          name: prepare
          command: script/ci-prepare.sh
      - run:
          name: rubocop
          command: if [[ "$CIRCLE_NODE_INDEX" == "0" ]] ; then bundle exec rubocop ; fi
      - run:
          name: npm lint
          command: if [[ "$CIRCLE_NODE_INDEX" == "1" || "$CIRCLE_NODE_TOTAL" == "1" ]] ; then npm run lint ; fi
          working_directory: client
      - run:
          name: rspec tests to run
          command: shopt -s globstar && echo $(circleci tests glob spec/**/*_spec.rb | circleci tests split --split-by=timings)
      - run:
          name: rspec
          command: shopt -s globstar && mkdir -p $CIRCLE_TEST_REPORTS/rspec && bundle exec rspec --format progress --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec/rspec.xml $(circleci tests glob spec/**/*_spec.rb | circleci tests split --split-by=timings --show-counts)
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: ~/project/tmp/capybara
          destination: test-screenshots
workflows:
  version: 2
  test:
    jobs:
      - test